name: Publish .NET Packages

on:
  push:
    paths:
      - 'src/Packages/**'  
    branches:
      - main  

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: configuration .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x' 
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

      - name: Definir vari√°vel de ambiente para autentica√ß√£o
        run: echo "NUGET_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore src/Packages

      - name: Compile the project
        run: dotnet build src/Packages --configuration Release --no-restore

      - name: Criar e publicar apenas pacotes atualizados
        run: |
          for project in $(find src/Packages -name "*.csproj"); do
            PACKAGE_NAME=$(basename "$project" .csproj)
            VERSION=$(grep -oP '(?<=<Version>).*?(?=</Version>)' "$project")

            echo "üîç Verificando $PACKAGE_NAME vers√£o $VERSION..."

            # Obt√©m a vers√£o mais recente do pacote j√° publicada no GitHub Packages
            LATEST_VERSION=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" | \
              jq -r --arg pkg "$PACKAGE_NAME" '.data[] | select(.name==$pkg) | .version' | sort -V | tail -n 1)

            if [ "$VERSION" != "$LATEST_VERSION" ]; then
              echo "üì¶ Criando pacote $PACKAGE_NAME v$VERSION..."
              dotnet pack "$project" --configuration Release --output .
            else
              echo "‚úÖ O pacote $PACKAGE_NAME j√° est√° na vers√£o mais recente ($VERSION). Pulando publica√ß√£o."
            fi
          done

          # Publica apenas pacotes gerados
          for package in *.nupkg; do
            echo "üöÄ Publicando $package..."
            dotnet nuget push "$package" \
              --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
              --api-key ${{ secrets.GITHUB_TOKEN }} \
              --skip-duplicate
          done
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
